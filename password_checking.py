# -*- coding: utf-8 -*-
"""Password checking.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NwHWtIuiKwWQcvgZ2IdlbZ45GQfXJ5V1
"""

import re

def is_password_weak(password):
    # Define criteria for a strong password
    min_length = 8
    has_uppercase = bool(re.search('[A-Z]', password))
    has_lowercase = bool(re.search('[a-z]', password))
    has_digit = bool(re.search('[0-9]', password))
    has_special_char = bool(re.search('[£!$%^&*()_+[\]{}"]', password))  # Corrected regex for special characters

    # Check if the password meets the criteria
    if len(password) < min_length:
        return True, "Password is too short (minimum is 8 characters)"
    if not has_uppercase:
        return True, "Password should contain an uppercase letter"
    if not has_lowercase:
        return True, "Password should contain a lowercase letter"
    if not has_digit:
        return True, "Password should contain a digit"
    if not has_special_char:
        return True, "Password should contain a special character"

    # If all criteria are met
    return False, "Password is strong"

import re

def is_password_weak(password):
    # Define criteria for a strong password
    min_length = 8
    has_uppercase = bool(re.search('[A-Z]', password))
    has_lowercase = bool(re.search('[a-z]', password))
    has_digit = bool(re.search('[0-9]', password))
    has_special_char = bool(re.search('[£!$%^&*()_+[\]{}"]', password))

    # Check if the password meets the criteria
    if len(password) < min_length:
        return True, "Password is too short (minimum is 8 characters)"
    if not has_uppercase:
        return True, "Password should contain an uppercase letter"
    if not has_lowercase:
        return True, "Password should contain a lowercase letter"
    if not has_digit:
        return True, "Password should contain a digit"
    if not has_special_char:
        return True, "Password should contain a special character"

    # If all criteria are met
    return False, "Password is strong"

# Example passwords to check
passwords = ["password", "Password123", "Passw@ord1", "12345", "P@ssword", "short1A!"]

for password in passwords:
    result, message = is_password_weak(password)
    print(f"Password: {password} - {message}")